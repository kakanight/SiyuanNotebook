{"ID":"20250704114516-3jwobip","Spec":"1","Type":"NodeDocument","Properties":{"id":"20250704114516-3jwobip","title":"1单双目系统","type":"doc","updated":"20250704161039"},"Children":[{"ID":"20250704151944-759memw","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20250704151944-759memw","updated":"20250704152019"},"Children":[{"Type":"NodeText","Data":"单目"}]},{"ID":"20250704114516-cci7ib4","Type":"NodeParagraph","Properties":{"id":"20250704114516-cci7ib4","updated":"20250704151945"},"Children":[{"Type":"NodeText","Data":"在单目视觉中无法决定一个物体的真实大小，一条线上的点全部投影到一个位置，就导致了仅通过单张图像无法获得像素的尺度信息。解决方案是通过获得不同视角的图像，然后通过三角测量Triangulation（化）的方法来估计地图点的深度"}]},{"ID":"20250704150845-c4h92gj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250704150845-c4h92gj","updated":"20250704150853"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"//************************************\n// Description: 根据左右相机中像素坐标求解空间坐标\n// Method:    uv2xyz\n// Parameter: Point2f uvLeft\n// Parameter: Point2f uvRight\n// Returns:   cv::Point3f\n//************************************\ncv::Point3d uv2xyz(cv::Point2d uvLeft,cv::Point2d uvRight,cv::Mat mLeftP,cv::Mat mRightP)\n{\n    //     [u1]      [xw]                      [u2]      [xw]\n    //zc1 *|v1| = Pl*[yw]                  zc2*|v2| = P2*[yw]\n    //     [ 1]      [zw]                      [ 1]      [zw]\n    //               [1 ]                                [1 ]\n \n    //最小二乘法A矩阵\n    cv::Mat A = cv::Mat(4,3,CV_64F);\n    A.at\u003cdouble\u003e(0,0) = uvLeft.x * mLeftP.at\u003cdouble\u003e(2,0) - mLeftP.at\u003cdouble\u003e(0,0);\n    A.at\u003cdouble\u003e(0,1) = uvLeft.x * mLeftP.at\u003cdouble\u003e(2,1) - mLeftP.at\u003cdouble\u003e(0,1);\n    A.at\u003cdouble\u003e(0,2) = uvLeft.x * mLeftP.at\u003cdouble\u003e(2,2) - mLeftP.at\u003cdouble\u003e(0,2);\n \n    A.at\u003cdouble\u003e(1,0) = uvLeft.y * mLeftP.at\u003cdouble\u003e(2,0) - mLeftP.at\u003cdouble\u003e(1,0);\n    A.at\u003cdouble\u003e(1,1) = uvLeft.y * mLeftP.at\u003cdouble\u003e(2,1) - mLeftP.at\u003cdouble\u003e(1,1);\n    A.at\u003cdouble\u003e(1,2) = uvLeft.y * mLeftP.at\u003cdouble\u003e(2,2) - mLeftP.at\u003cdouble\u003e(1,2);\n \n    A.at\u003cdouble\u003e(2,0) = uvRight.x * mRightP.at\u003cdouble\u003e(2,0) - mRightP.at\u003cdouble\u003e(0,0);\n    A.at\u003cdouble\u003e(2,1) = uvRight.x * mRightP.at\u003cdouble\u003e(2,1) - mRightP.at\u003cdouble\u003e(0,1);\n    A.at\u003cdouble\u003e(2,2) = uvRight.x * mRightP.at\u003cdouble\u003e(2,2) - mRightP.at\u003cdouble\u003e(0,2);\n \n    A.at\u003cdouble\u003e(3,0) = uvRight.y * mRightP.at\u003cdouble\u003e(2,0) - mRightP.at\u003cdouble\u003e(1,0);\n    A.at\u003cdouble\u003e(3,1) = uvRight.y * mRightP.at\u003cdouble\u003e(2,1) - mRightP.at\u003cdouble\u003e(1,1);\n    A.at\u003cdouble\u003e(3,2) = uvRight.y * mRightP.at\u003cdouble\u003e(2,2) - mRightP.at\u003cdouble\u003e(1,2);\n \n    //最小二乘法B矩阵\n    cv::Mat B = cv::Mat(4,1,CV_64F);\n    B.at\u003cdouble\u003e(0,0) = mLeftP.at\u003cdouble\u003e(0,3) - uvLeft.x * mLeftP.at\u003cdouble\u003e(2,3);\n    B.at\u003cdouble\u003e(1,0) = mLeftP.at\u003cdouble\u003e(1,3) - uvLeft.y * mLeftP.at\u003cdouble\u003e(2,3);\n    B.at\u003cdouble\u003e(2,0) = mRightP.at\u003cdouble\u003e(0,3) - uvRight.x * mRightP.at\u003cdouble\u003e(2,3);\n    B.at\u003cdouble\u003e(3,0) = mRightP.at\u003cdouble\u003e(1,3) - uvRight.y * mRightP.at\u003cdouble\u003e(2,3);\n \n    cv::Mat XYZ = cv::Mat(3,1,CV_64F);\n    //采用SVD最小二乘法求解XYZ\n    cv::solve(A,B,XYZ,cv::DECOMP_SVD);\n \n    //std::cout\u003c\u003c\"空间坐标为 = \"\u003c\u003cstd::endl\u003c\u003cXYZ\u003c\u003cstd::endl;\n \n    //世界坐标系中坐标\n    cv::Point3d world;\n    world.x = XYZ.at\u003cdouble\u003e(0,0);\n    world.y = XYZ.at\u003cdouble\u003e(1,0);\n    world.z = XYZ.at\u003cdouble\u003e(2,0);\n \n    return world;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250704150853-35g9hlw","Type":"NodeParagraph","Properties":{"id":"20250704150853-35g9hlw","updated":"20250704151109"},"Children":[{"Type":"NodeText","Data":"投影矩阵，选出左相机(u1,v1)和右相机(u2,v2)的点在图像中投影的位置。"}]},{"ID":"20250704151115-lbbh8i2","Type":"NodeParagraph","Properties":{"id":"20250704151115-lbbh8i2","updated":"20250704151423"},"Children":[{"Type":"NodeText","Data":"投影矩阵P =K* [R | t]  (3,4)"}]},{"ID":"20250704151241-cfp8dpf","Type":"NodeParagraph","Properties":{"id":"20250704151241-cfp8dpf","updated":"20250704151322"},"Children":[{"Type":"NodeText","Data":"Z * [u1,v1,1]T = P1 * [xw,yw,zw,1]T"}]},{"ID":"20250704151228-y7bb6tx","Type":"NodeParagraph","Properties":{"id":"20250704151228-y7bb6tx","updated":"20250704151739"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"截屏2025-07-04 15.17.02"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/截屏2025-07-04 15.17.02-20250704151731-rxhzc8c.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20250704152004-u6a9le5","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20250704152004-u6a9le5","updated":"20250704152641"},"Children":[{"Type":"NodeText","Data":"双目"}]},{"ID":"20250704151740-9g7m7yn","Type":"NodeParagraph","Properties":{"id":"20250704151740-9g7m7yn","updated":"20250704152109"},"Children":[{"Type":"NodeText","Data":"下一步在双目相机中的点，如果能将在左相机平面中的点，在右相机平面中找到其对应的点，就可以获得深度值，进一步计算出物体的3维点的信息。为了简便通常将两个相机平面矫正到同一水平上。矫正后的双目相机对应的匹配点搜索空间从2维变成了1维。"}]},{"ID":"20250704152144-rmxysq6","Type":"NodeParagraph","Properties":{"id":"20250704152144-rmxysq6","updated":"20250704152200"},"Children":[{"Type":"NodeText","Data":"矫正之后对于相机模型，使用相似三角形"}]},{"ID":"20250704152214-pmz9fwq","Type":"NodeParagraph","Properties":{"id":"20250704152214-pmz9fwq","updated":"20250704152236"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"style":"width: calc(50% - 8px);"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"截屏2025-07-04 15.22.10"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/截屏2025-07-04 15.22.10-20250704152225-wiza4h4.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: calc(50% - 8px);\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250704152240-9jy4cxp","Type":"NodeParagraph","Properties":{"id":"20250704152240-9jy4cxp","updated":"20250704152625"},"Children":[{"Type":"NodeText","Data":"求解深度z = bf/d ，f焦距，b基线长度，d是视差，就是在成像平面上xl和xr的长度之差"}]},{"ID":"20250704152641-51dwmrw","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20250704152641-51dwmrw","updated":"20250704153149"},"Children":[{"Type":"NodeText","Data":"双目匹配"}]},{"ID":"20250704152646-lq1peer","Type":"NodeParagraph","Properties":{"id":"20250704152646-lq1peer","updated":"20250704152926"},"Children":[{"Type":"NodeText","Data":"如何寻找？矫正后的双目的相机的左图和右图的点，符合极线约束，通过极线来缩减搜索区域。"}]},{"ID":"20250704152831-q3hutte","Type":"NodeParagraph","Properties":{"id":"20250704152831-q3hutte","updated":"20250704152930"},"Children":[{"Type":"NodeText","Data":"如何匹配？在极线上如何进行匹配，通过扫描极线比较左右图中的块，找到和左图最相似的部分"}]},{"ID":"20250704152931-0c7x2sf","Type":"NodeParagraph","Properties":{"id":"20250704152931-0c7x2sf","updated":"20250704152956"},"Children":[{"Type":"NodeText","Data":"如何判断相似？通过计算极线上的每个点的匹配代价cost"}]},{"ID":"20250704153016-977y6ar","Type":"NodeParagraph","Properties":{"id":"20250704153016-977y6ar","updated":"20250704153106"},"Children":[{"Type":"NodeText","Data":"如何计算深度？通过匹配点的坐标得到视差d，然后根据视差d，焦距f，基线b计算深度z"}]},{"ID":"20250704153126-yqqq129","Type":"NodeParagraph","Properties":{"id":"20250704153126-yqqq129","updated":"20250704153149"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20250704153127-e3ggrx3.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20250704152916-zvr741v","Type":"NodeParagraph","Properties":{"id":"20250704152916-zvr741v","updated":"20250704152916"}}]}